#######################
Day 10 - 27th Oct. 2024
#######################			
		
	Kubernetes ::::
	
		- It is a Open-Source Container Orchestration Tool 
		- Kubernetes is used to Deploy any type of Containers.
		- It is used to ensure high availability of the Applications/services running thru Containers.
		- Used to Ensure High Availability of Containers by creating Replicas of Containers.
		- It supports Auto-Scaling & Load Balancing.
		
	Managed Services ::

		AWS 	- ECS/ECR/EKS 
		Azure 	- ACS/ACR/AKS 
		GCP     - GCE/GCR/GKE
			
	GOOGLE !	
		
	Kubernetes Architecture  ::::
	
	
		Kubernetes_Master :
		
			Kubernetes_WorkNode1
			Kubernetes_WorkNode2
			Kubernetes_WorkNode3
			
	Kubernetes Architecture Components :
	
		Kubernetes Components ::::

			API_Server 				--> # Acts as an interface to the kubernetes 
			
			ETCD 					--> # Single point of Source for Kubernetes Components 
			
			Scheduler				--> # To identify the Healthy Node for Deployments
			
			Controller Manager 		--> # To run the pods in its desired state 
			
			
			Kubelet 				--> # Is a Kubernetes Agent used to Create & Deploy the Pods
			
			KubeProxy				--> # Is used to enable pod networking by create Pod IP Address			
			
			CRI - Container RunTime Interface (Container-D)
									--> # It is used identify the Image from Container Registry for deployment
				
				
		
	
		Kubernetes Concepts / Terminologies ::::
		
		
			Kubernetes_Master			# Used to Create and Schedule the Deployments to Kubernetes_WorkNodes
			
			Kubernetes_WorkNodes		# Target Servers 

			Kubectl 					# Is Command Line Utility, used to interact with Kubernetes Master 
			
			Container Images 
				--	Is a Static file that defined the properties of the Container and its dependencies 
				--  Container Images are Non-Executables
				--  Container Images are composed of various Layers created using the Dockerfile Instructions
				
			Containers 
				--	Containers are the executable units of Container Images
				-- 	Containers are used to run the applications defined in the Container Images 		
			
			Container Registry 
				--	It is used to save and version control the Container Images 
					Dockerhub is Container Registry to be used.
					https://hub.docker.com/			
			
			Container Repositories
				--	Container Repositories	are the subset of Container Registry
			
			
			Pod							# Is Atomic Unit of Schedule - Any Small Task you run in Kubernetes is executed as Pod.
										# Used to Run the Container(s)
										# As a best practise, it is recommended to have One Container in a Pod.
			
			Kubelet 					# Is a Kubernetes Agent used to Create & Deploy the Pods
			
			CRI 						# Container Run-Time Interface - "Container-D"
										# It is used identify the Image from Container Registry for deployment
			
		
			Manifest File				# Is a AppConfig file, that defines the properties of the pods to be deployed in kubernetes
										# It is written using *.yaml/*.json format by the developers and maintained in the Source Code Repositories during CICD Pipeline Automation Process 
		
		
			Cluster 					# Is collection of WorkerNodes - Is a logical grouping of worker nodes.



			Kubernetes Developer & Administrators 


		Kubernetes_Master (VM):
		
			Kubernetes_Cluser				# region1
				Kubernetes_WorkNode1(VM)
				Kubernetes_WorkNode2(VM)
				Kubernetes_WorkNode3(VM)
		
		
		Kubernetes_Master :
		
			Kubernetes_Cluser1				# region1  -- azs			AWS
				Kubernetes_WorkNode1
				Kubernetes_WorkNode2
				Kubernetes_WorkNode3		
		
			Kubernetes_Cluser2				# region2
				Kubernetes_WorkNode1
				Kubernetes_WorkNode2
				Kubernetes_WorkNode3			
		
	
			Kubernetes_Cluser3				# region3
				Kubernetes_WorkNode1
				Kubernetes_WorkNode2
				Kubernetes_WorkNode3		


		
		Kubernetes_Master : On-Prem
		
			Kubernetes_Master1 :										GCP 
				Kubernetes_Cluser1				# region1 
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3		
			
				Kubernetes_Cluser2				# region2
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3			
		
				Kubernetes_Cluser3				# region3
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3		
		
			Kubernetes_Master2 :										AWS 
			
				Kubernetes_Cluser1				# region1 
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3		
			
				Kubernetes_Cluser2				# region2
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3	
		
				Kubernetes_Cluser3				# region3
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3		
	
			Kubernetes_Master3 :										On-Prem
			
				Kubernetes_Cluser1				# region1 
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3		
			
				Kubernetes_Cluser2				# region2
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3			
		
				Kubernetes_Cluser3				# region3
					Kubernetes_WorkNode1
					Kubernetes_WorkNode2
					Kubernetes_WorkNode3		
		

	
Next :		
		
	Installation of Kubernetes Master/Worknodes :::	
	
	Working with Kubernetes


#######################
Day 11 - 9th Nov. 2024
#######################		
		
	Installation of Kubernetes Master/Worknodes :::	
	
	Working with Kubernetes
	
	Concepts:
		- Kubectl 
		- Pods 
		- Controller Objects:
			- Replication Controller
			- Replicaset
			- Daemonset
			- Deployment 
		- Kubernetes Services 
			- NodePort Service
			- ClusterIP Service 
			- Load Balancer
		- Kubernetes Volumes 
			- ConfigMaps 
			- Secrets
			- HostPath Volume
			- Persistant Volumes 
			- Persistant Volume Claim
		- HELM Charts 
	
	Demo : Use Cases using Jenkins/Docker/Kubernetes 
		
	
	Installation of Kubernetes Master/Worknodes :::				
	
	
	Kubernetes_Master (VM):
	
		Kubernetes_WorkNode1(VM)
		Kubernetes_WorkNode2(VM)
		
	Working with Kubernetes :::
	
		- Create Manifest File 
			- Using *.yaml / *.json 

	
		- Controller Objects:
			- Replication Controller
			- Replicaset
			- Daemonset
			- Deployment 			
		
			- Replication Controller & Replicaset			

				- Used to create replicas of pods 
				- Used to run the specific no. of pod instances to ensure high availability.
				
				Replication Controller :
					- Uses the equality based operator to deploy the service 
					- Outdated one.
					
					envi = qa
					
				Replicaset :
					- Uses the Set Based Operator to deploy the service 
					- Replicaset are enhancement of Replication Controller
					- It can be automatically create during Deployment Controller Object Definitions.
					
					envi : {qa,uat}
	
		
				Labels and Selectors :
				
				
				
				Scaling :
				
					Scale-Up 	--> 100 Relicas of pods - 1000 users --> 10000 Users 
					Scale-Down 
					
	Deployment Controller Object :::
	
		--> It is used to deploy the pods and ensure high availability of pods by creating pod replicas 
			It is self healing!
		--> 1. Create Muliple instance/replicas/copies of pods 
			2. Used to Scale-Up / Scale-Down the Pods 
			3. Used to Upgrade the application pods 
			4. Used to Down-grade/roll-back the application pods
		--> The upgrade/down-grade of application pods can be done without any downtime. 
		--> To achieve zero-downtime during upgrade/down-grade, By Default, it used Rolling-Update Deployment Strategy.	
			

		- Upgrade the application pods 
		- Down-grade/roll-back the application pods
		
		
		- Create 
			Deployment Object 
			Replicaset 
			Pod Instances 
		
		
		Deployment Strategies :
		
			- Rolling-Update Strategy 		# Is the Default Deployment Strategy.
			
	
		PROD_Server : 		Production Deployment Window 4 - 6hrs 
			Prod_Server1,2,3,4,5
		
			*.war_v1.0 	
			
			*.war_v2.0 
			
		
		WNode1,2,3
		
		Pod_Replicas:
		
		pod1.0		==> pod2.0
		pod1.0		==> pod2.0		
		pod1.0		==> pod2.0
			
			
			
		Server --> CPU-2,4GB RAM
		
			--> Vertical Scaling Means --> Increase CPU/RAM

			--> Horizontal Scaling Means --> Add More no. of servers to the infra.
			
		

		
		Service - payment-svc --> payment-deploy -> payment-app:v1.0 -> payment-app.war_SNAPSHOT1.0 

		Service - payment-svc --> payment-deploy -> payment-app:v2.0 -> payment-app.war_SNAPSHOT2.0


	- Daemonset :
	
		-> Replicaset : Used to run the specific no. of pod instances to ensure high availability.
		
		-> Daemonset : Used to run a copy of pod in all/set the available nodes
		
			KMaster :
				- KWN1
				- KWN2

	
Next :
		
		- Kubernetes Services 
			- NodePort Service
			- ClusterIP Service 
			- Load Balancer
		- Kubernetes Volumes 
			- ConfigMaps 
			- Secrets
			- HostPath Volume
			- Persistant Volumes 
			- Persistant Volume Claim
		- HELM Charts 	
		
	
	
	
